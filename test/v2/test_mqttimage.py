#!/usr/bin/env python3
#-*- coding:utf-8 -*-


import sys
import os
import logging
import ssl
import paho.mqtt.client as mqtt
import queue
import threading
import time
import json
import random
import struct

class mqtt_client(mqtt.Client):

	#debug = True
	username = None
	password = None
	logger = None
	
	sub_topic_list = []
	delete_list = []

	gpio_handler = None
	gpio_group = None
	gpio_pin = None


	lcd_logopic_160x20 = [

0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xde, 0x3f, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0x8e, 0x3f, 0xff, 0x87, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0x8e, 0x3f, 0xff, 0x87, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0x8f, 0xff, 0xff, 0x8f, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x8f, 0xf8, 0xff, 0x8e, 0x7c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xf0, 0xff, 0x0c, 0x38, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf0, 0xff, 0x0c, 0x3c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0x1c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfe, 0x1c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0x3b, 0xfe, 0x1c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x8f, 0xff, 0x8e, 0x3f, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x87, 0xff, 0x86, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x87, 0xff, 0x87, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0x87, 0xff, 0x87, 0xff, 0xff, 0xff, 0xc7, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xc3, 0x1f, 0xc7, 0xff, 0xff, 0xff, 0xc7, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xf8, 0xc3, 0x1f, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x43, 0x1f, 0xfe, 0x3f, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x0f, 0xef, 0xf8, 0x63, 0xff, 0xfe, 0x3f, 0xf8, 0xe3, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0x03, 0xc7, 0xfc, 0x37, 0xff, 0xe6, 0x33, 0xf8, 0xe7, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x01, 0xc7, 0xfc, 0x3f, 0xff, 0xc6, 0x21, 0xf8, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xf0, 0xef, 0xfe, 0x1f, 0xcf, 0xc2, 0x33, 0xff, 0xfc, 0x7f, 0xcf, 0x87, 0xc3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0xf8, 0xff, 0xfe, 0x18, 0x87, 0xc3, 0xff, 0xff, 0xfc, 0x7f, 0xc7, 0x8f, 0xe3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0xfc, 0xff, 0xff, 0x18, 0x87, 0xc3, 0xff, 0xff, 0xfc, 0x7f, 0xc7, 0x1f, 0xf1, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0x1c, 0xff, 0xff, 0xf8, 0xc7, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1c, 0x71, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0x1c, 0xff, 0xff, 0xff, 0xc7, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1c, 0x71, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0x3c, 0xff, 0x3f, 0xef, 0xe7, 0xe3, 0xff, 0xf7, 0xff, 0xfc, 0x7f, 0x1c, 0x71, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0xf8, 0xfe, 0x1f, 0xc7, 0xff, 0xe3, 0xff, 0xe3, 0xff, 0xfc, 0x7f, 0x9f, 0xf1, 0xfd, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xf8, 0xff, 0x0f, 0xc3, 0xff, 0xff, 0xe7, 0xc3, 0xff, 0xf8, 0x7f, 0x8f, 0xe3, 0xf0, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xe1, 0xff, 0x0f, 0xc3, 0xf3, 0xff, 0xc3, 0xc3, 0xe7, 0xf0, 0xc7, 0x83, 0x87, 0xc0, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x03, 0xff, 0x87, 0xe1, 0xf1, 0xff, 0xc3, 0xc7, 0xc7, 0xe0, 0x87, 0xc0, 0x07, 0x81, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0x07, 0xfc, 0xc3, 0xe3, 0xf1, 0xf3, 0xc3, 0xc7, 0x87, 0xe1, 0x87, 0xf0, 0x1f, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x18, 0xc1, 0xff, 0xf0, 0xe1, 0xc7, 0x87, 0x87, 0xc3, 0x0c, 0x7f, 0xff, 0x0f, 0xff, 0xff, 
	0xff, 0xfc, 0xff, 0xff, 0xff, 0x18, 0xe1, 0xff, 0xf0, 0xf3, 0xc7, 0x87, 0x8f, 0x83, 0x1c, 0x7f, 0xff, 0x1f, 0x1f, 0xff, 
	0xff, 0xf8, 0x3f, 0xe7, 0xff, 0x1f, 0xf0, 0xfe, 0xf8, 0xff, 0xff, 0x8f, 0x0f, 0x87, 0xfc, 0xff, 0xff, 0xfc, 0x1f, 0xff, 
	0xff, 0xfc, 0x1f, 0xc1, 0xff, 0xff, 0xf8, 0x7c, 0x7f, 0xff, 0xff, 0xff, 0x1f, 0x8f, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 
	0xff, 0xfe, 0x1f, 0xe0, 0xff, 0xff, 0xf8, 0x7c, 0x7f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 
	0xff, 0xff, 0x3f, 0xe0, 0xff, 0xff, 0xfc, 0x3e, 0xff, 0x80, 0x01, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xfe, 0x7e, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xfc, 0xff, 0x3f, 0xfc, 0x7e, 0x01, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3f, 0xef, 0xfc, 0x3e, 0x1f, 0xe0, 0x00, 0x00, 0x07, 0xfc, 0x7c, 0x1f, 0xfc, 0x7c, 0x07, 0xe3, 0xff, 
	0xff, 0xff, 0xff, 0x1f, 0xc3, 0xfc, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x7c, 0x3f, 0xfe, 0x70, 0x1f, 0x81, 0xff, 
	0xff, 0xff, 0x3f, 0x1f, 0xc1, 0xfe, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x3f, 0x8f, 0xf0, 0x3f, 0x83, 0xff, 
	0xff, 0xff, 0x07, 0xf8, 0xe1, 0xff, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x7f, 0x0f, 0xe0, 0xf7, 0x8f, 0xff, 
	0xff, 0xff, 0x03, 0xf8, 0xf1, 0xff, 0x83, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0xfe, 0x0e, 0xf3, 0xe3, 0xff, 0xff, 
	0xff, 0xff, 0x03, 0xf8, 0xff, 0xff, 0xc3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe1, 0xf8, 0x1c, 0x7f, 0xe3, 0xff, 0xff, 
	0xff, 0xff, 0xe7, 0x1f, 0xff, 0xff, 0xe7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf3, 0xf0, 0x3c, 0x7f, 0xf7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x07, 0xff, 0xf3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x7e, 0xf7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x03, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x81, 0xff, 0xe3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x83, 0xff, 0xf0, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x03, 0xff, 0xe3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0x1f, 0xf8, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x0f, 0xff, 0xf7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x1f, 0xfc, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1f, 0xf3, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x3f, 0xff, 0xff, 0x1d, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x0f, 0xff, 0xff, 0xf8, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x0e, 0x7f, 0xff, 0xfd, 0xe7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x7f, 0xff, 0xf1, 0xff, 0xff, 
	0xff, 0xfc, 0x3f, 0xff, 0xff, 0xc3, 0x80, 0x00, 0x00, 0x0f, 0x0e, 0x18, 0x00, 0x01, 0xe0, 0xff, 0xff, 0x01, 0xff, 0xff, 
	0xff, 0xfe, 0x7e, 0x0f, 0xff, 0xe7, 0x00, 0x00, 0x00, 0x3f, 0x9f, 0x3c, 0x00, 0x00, 0xe3, 0xff, 0xf8, 0x01, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xdf, 
	0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7f, 0xf8, 0x70, 0x1f, 0xfe, 0x0f, 
	0xff, 0xc0, 0xff, 0x8f, 0xe1, 0xfe, 0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x7f, 0xe0, 0x71, 0xff, 0xfc, 0x0f, 
	0xff, 0xc0, 0xff, 0xff, 0xc0, 0x3e, 0x00, 0x00, 0x07, 0xf3, 0xff, 0xf8, 0x00, 0x00, 0x7f, 0xe0, 0x7f, 0xfc, 0x7c, 0x0f, 
	0xff, 0xe0, 0xfc, 0x7f, 0xe0, 0x1c, 0x00, 0x00, 0x0f, 0xe7, 0xff, 0xf8, 0x00, 0x00, 0x38, 0xe0, 0xff, 0x1c, 0x7f, 0xff, 
	0xff, 0xff, 0xfc, 0x71, 0xf8, 0x1c, 0x00, 0x00, 0x1f, 0xcf, 0xff, 0xfc, 0x00, 0x00, 0x38, 0xff, 0xc7, 0x1c, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x71, 0xff, 0x1c, 0x00, 0x00, 0x7f, 0x9f, 0xff, 0xfe, 0x00, 0x00, 0x3c, 0xff, 0xc7, 0x3f, 0xff, 0xff, 
	0xf0, 0x7f, 0xff, 0xf3, 0xff, 0xfc, 0x00, 0x00, 0xfe, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x1f, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xf0, 0x0f, 0xe1, 0xff, 0xff, 0xf8, 0x00, 0x01, 0xfc, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 
	0xf0, 0x0f, 0xc0, 0xfe, 0xff, 0xf8, 0x00, 0x03, 0xf9, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0x87, 0xe0, 0x0f, 0xff, 
	0xf8, 0x0f, 0xc0, 0xfc, 0x70, 0x78, 0x00, 0x07, 0xf3, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x1e, 0x0e, 0x03, 0xe0, 0x0f, 0xff, 
	0xff, 0xff, 0xf0, 0xfc, 0x70, 0x38, 0x00, 0x0f, 0xc3, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1e, 0x06, 0x07, 0xf8, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x70, 0x38, 0x00, 0x0f, 0x83, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1e, 0x07, 0x0f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x78, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1e, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7e, 0x38, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1c, 0x00, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe7, 0x1c, 0x7e, 0x38, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1e, 0x00, 0x1f, 0xfe, 0x7f, 0xff, 
	0xf0, 0x7f, 0xc7, 0x1c, 0x7f, 0xf8, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0x00, 0x3f, 0xfc, 0x7e, 0x0f, 
	0xf0, 0x3f, 0xc7, 0x9f, 0xff, 0xf8, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x7e, 0x07, 
	0xf0, 0x7f, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x07, 
	0xf9, 0xff, 0xff, 0x1f, 0xff, 0xfc, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xcf, 
	0xff, 0xff, 0xc0, 0x0f, 0xff, 0x9c, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x3c, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x0f, 0xff, 0x1c, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x38, 0x0f, 0xff, 0xfc, 0xff, 0xff, 
	0xff, 0xc7, 0x00, 0x1f, 0x3f, 0x1e, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x7c, 0x03, 0xff, 0xfc, 0x73, 0xff, 
	0xff, 0xc7, 0x07, 0xf0, 0x1f, 0xfe, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x7e, 0x03, 0x9f, 0xfc, 0x61, 0xff, 
	0xff, 0xe7, 0xff, 0x00, 0x1f, 0xfe, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x7f, 0xc3, 0x8f, 0xff, 0xf3, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0x00, 0x0f, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x1f, 0xff, 0xc7, 0x80, 0x06, 0x00, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xe3, 0xff, 0xff, 0x8e, 0x3f, 0xff, 
	0xff, 0xff, 0xf9, 0xff, 0xff, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe3, 0xff, 0xff, 0xce, 0x3f, 0xff, 
	0xfc, 0x0f, 0xff, 0xff, 0xff, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf3, 0x9f, 0xff, 0xfe, 0x3f, 0xff, 
	0xfc, 0x0f, 0xff, 0xff, 0xe7, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x1f, 0xff, 0xff, 0xe3, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xf8, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0xff, 0xf0, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0xff, 0xe0, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xff, 0x81, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x81, 0xf1, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x3f, 0x03, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0xf0, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x1e, 0x0f, 0xe7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe3, 0xf1, 0xf0, 0x7f, 0xe3, 0xff, 0xff, 
	0xff, 0xff, 0x3f, 0xf0, 0x38, 0x1f, 0xc3, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe1, 0xff, 0xfc, 0x7f, 0xe3, 0xff, 0xff, 
	0xff, 0xff, 0x1f, 0xe0, 0x70, 0x3f, 0x83, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xff, 
	0xff, 0xff, 0x1f, 0xc0, 0xc0, 0xfe, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x7f, 0x8f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc3, 0xc1, 0xfe, 0x0f, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x3f, 0xcf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc7, 0xfc, 0x1f, 0x1f, 0xc0, 0x00, 0x00, 0x03, 0xfc, 0x7c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xfc, 0x3e, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xfe, 0xff, 0x1f, 0xff, 0x00, 0x00, 0xff, 0xfc, 0x3f, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x1f, 0xe0, 0xff, 0xef, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0x3e, 0x1f, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0x1f, 0xe0, 0xff, 0xc7, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0x1e, 0x0f, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 
	0xff, 0xf8, 0x1f, 0xe3, 0xff, 0xc7, 0xff, 0xfc, 0x79, 0xff, 0xff, 0xdf, 0x0f, 0x0f, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 
	0xff, 0xf8, 0x3f, 0xff, 0xff, 0xef, 0xff, 0xff, 0xf0, 0xff, 0xef, 0x8f, 0x0f, 0x87, 0xf8, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xfc, 0xfc, 0x7f, 0xff, 0xf8, 0xe3, 0xff, 0xf0, 0xe3, 0xc7, 0x87, 0x8f, 0xc3, 0xf8, 0x00, 0x3e, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x7e, 0x1f, 0xf0, 0xc3, 0xff, 0xf1, 0xe1, 0xc3, 0x87, 0x87, 0xc3, 0xf0, 0x00, 0x7f, 0x87, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0xf8, 0x03, 0xf0, 0x83, 0xff, 0xf1, 0xe1, 0xc3, 0xc7, 0xc7, 0xe3, 0xe0, 0x00, 0xff, 0xc7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x01, 0xf1, 0x87, 0xff, 0xe1, 0xe3, 0xc3, 0xc7, 0xc3, 0xff, 0xe0, 0x01, 0xc1, 0xc3, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xf1, 0xf3, 0x0f, 0xff, 0xe1, 0xe3, 0xc3, 0xc3, 0xe1, 0xff, 0xc0, 0x01, 0xc0, 0xc3, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xf8, 0xfe, 0x0f, 0xff, 0xe3, 0xf3, 0xe7, 0xc3, 0xe1, 0xff, 0xc0, 0x01, 0xc0, 0xe1, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0xf8, 0xfe, 0x1f, 0xff, 0xe3, 0xff, 0xff, 0xe3, 0xf0, 0xff, 0xc0, 0x01, 0xc1, 0xc1, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0x1c, 0xfc, 0x3f, 0x8f, 0xff, 0xff, 0xff, 0xe1, 0xf0, 0xff, 0xc0, 0x01, 0xc3, 0xc1, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0x1c, 0xf8, 0x7f, 0x8f, 0xff, 0xff, 0xf7, 0xe1, 0xf8, 0xff, 0xc0, 0x71, 0xc7, 0x81, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0x1c, 0xf8, 0x7f, 0x98, 0xff, 0xff, 0xe3, 0xe1, 0x89, 0xff, 0xc0, 0xf1, 0xcf, 0x01, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0xf8, 0xf0, 0xff, 0xf8, 0x8f, 0xff, 0xe3, 0xf1, 0x0f, 0xff, 0xc1, 0xe1, 0xc0, 0x01, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xf8, 0xe1, 0xff, 0xf0, 0x87, 0xef, 0xf7, 0xf0, 0x87, 0xff, 0xc3, 0x81, 0xc0, 0x01, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xf1, 0xc1, 0xff, 0xf0, 0x8f, 0xc7, 0xff, 0xf0, 0x86, 0x3f, 0xc3, 0x81, 0xc0, 0x01, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x01, 0xc3, 0xff, 0xf1, 0x8f, 0xc7, 0xff, 0xf8, 0xc6, 0x3f, 0xc3, 0x81, 0xc0, 0x01, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0x07, 0xc7, 0xff, 0xff, 0x8f, 0xef, 0xf3, 0xf8, 0xfe, 0x1f, 0xc3, 0x83, 0x80, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0xf8, 0xff, 0x9f, 0xfe, 0x31, 0xfc, 0xff, 0x1f, 0xe1, 0xc7, 0x80, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xfe, 0x31, 0xff, 0xff, 0x0f, 0xe1, 0xff, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xf1, 0x9f, 0xf0, 0xfe, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0x3f, 0xff, 0xf1, 0xff, 0xf8, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xfe, 0x3f, 0xff, 0xf0, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xce, 0x3b, 0xff, 0xf0, 0xe3, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8e, 0x31, 0xff, 0x30, 0xe3, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0x86, 0x30, 0xfe, 0x18, 0x63, 0xff, 0xc0, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0x1f, 0xff, 0x86, 0x30, 0xfe, 0x18, 0x7f, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0x1c, 0xff, 0x86, 0x30, 0xff, 0x1c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8e, 0x18, 0x7f, 0x8e, 0x31, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0e, 0x18, 0x7f, 0x8f, 0x7f, 0xff, 0x0f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1e, 0x38, 0xff, 0x8f, 0xff, 0xff, 0x0f, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xf8, 0xff, 0x8f, 0xff, 0xff, 0x8f, 0x3c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xf0, 0xff, 0xff, 0xf9, 0xff, 0x8f, 0x1c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xf0, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x1e, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xf1, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x0f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
	]


	def set_user_and_password(self, username, password):
		self.username = username
		self.password = password

	def set_cafile(self, filename:str)->bool:
		if not os.path.exists(filename):
			print("cafile is not exists")
			exit(1)
		self.cafile = filename
		#print(self.lcd_logopic_160x20)
	
	def generate_random_str(self, randomlength=16):
		"""
		生成一个指定长度的随机字符串
		"""
		random_str = ''
		base_str = 'ABCDEFGHIGKLMNOPQRSTUVWXYZabcdefghigklmnopqrstuvwxyz0123456789'
		length = len(base_str) - 1
		for i in range(randomlength):
			random_str += base_str[random.randint(0, length)]
		return random_str

	def on_connect(self, mqttc, obj, flags, rc):
		#flags中的标志位能够知道此次连接时第一次连接还是短线后重连的
		try:
			print("Connection returned result: " + mqtt.connack_string(rc))
			if rc == 0:
				print("connect success")
			
			if self.publish_queue is not None:
				topic = "{}{}".format("/ctrl/", self.device_sn)
				self.publish_queue.put({"topic":topic, "payload":'hhh', 'qos':0, 'retain':False})
		except Exception as e:
			print("on_connect error:{}".format(e))

	#执行mqttc.disconnect()主动断开连接会触发该函数
	#当因为什么原因导致客户端断开连接时也会触发该函数,ctrl-c停止程序不会触发该函数
	def on_disconnect(self, mqttc, obj, rc):
		print("obj={}, rc={}".format(obj, rc))
		if obj is not None:
			mqttc.user_data_set(obj + 1)
			if obj == 0:
				mqttc.reconnect()

	'''
	mqttc:	the client instance for this callback
	obj:	the private user data as set in ``Client()`` or ``user_data_set()``
	msg:	an instance of MQTTMessage. This is a class with members ``topic``, ``payload``, ``qos``, ``retain``.
	'''
	def on_message(self, mqttc, obj, msg):
		msgjson = json.loads(str(msg.payload, encoding='utf-8'))
		if msgjson["sn"] == self.device_sn:
			print(time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()) + ":on message:" + msg.topic + " " + str(msg.qos) + " " + str(msg.payload))

	def on_publish(self, mqttc, obj, mid):
		#重要，用来确认publish的消息发送出去了。有时即使publish返回成功，但消息却没有发送。
		#print("on public,mid:{}".format(mid))
		pass

	def on_subscribe(self, mqttc, obj, mid, granted_qos):
		print("Subscribed: " + str(mid) + " " + str(granted_qos))
	
	def setsubscribe(self, topic=None, qos=0):
		self.sub_topic_list.append((topic, qos))

	def set_deviceid(self, devid):
		self.device_sn = devid

	def do_select(self):
		self.publish_queue = queue.Queue(8)
		while True:
			try:
				if not self.publish_queue.empty():
					msg = self.publish_queue.get()
					#print("{}:i publish: {}".format(time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()), msg))
					bytemsg = bytes(self.lcd_logopic_160x20)
					bHead = bytes("ZYWL", encoding='utf-8')
					bCmd = 12
					bIdentify = 0xbbdd
					bBodyHead0 = 0xaa
					bBodyHead1 = 0x55
					bBodyType = 0xfa
					bImageLenght = 3200
					# HEAD[4] CMD[1] IDENTIFY[2] TIMESTAMP[4]
					fmt = "<4sBHIBBBH3200s"
					bytemsg = struct.pack(fmt, bHead, bCmd, bIdentify, int(time.time()), bBodyHead0, bBodyHead1, bBodyType, bImageLenght, bytes(self.lcd_logopic_160x20))
					print("bytemsg={}".format(str(bytemsg)))
					print("bytemsg type={} len={}".format(type(bytemsg), len(bytemsg)))
					info = self.publish(topic = msg["topic"], payload = bytemsg, qos = msg["qos"], retain = msg["retain"])
					if info.rc == mqtt.MQTT_ERR_SUCCESS:
						#self.delete_list.append({"mid":info.mid, "msg":msg})
						info.wait_for_publish()
				time.sleep(0.1)
			except Exception as e:
				print("select error:{}".format(e))  

	def start_publish_thread(self):    
		publish_thread = threading.Thread(target = self.do_select)
		publish_thread.setDaemon(True)
		publish_thread.start()

	def run(self, host=None, port=1883, keepalive=60):
		self.reconnect_delay_set(min_delay=10, max_delay=120)

		self.username_pw_set(self.username, self.password)
		self.tls_set(ca_certs=self.cafile, certfile=None, keyfile=None, cert_reqs=ssl.CERT_REQUIRED, tls_version=ssl.PROTOCOL_TLSv1_1)
		self.tls_insecure_set(False)
		
		self.connect(host, port, keepalive)
		self.subscribe(self.sub_topic_list)
		self.loop_forever()

if __name__ == "__main__":
	'''
	client_id:	唯一用户id,不能和其他客户端有相同的。如果设置为None,则自动生成一个随机id,设置为None是clean_session必须为True
   	clean_session:	设置为True时，当客户端断开broker会删除所有关于该客户端的信息.如果为False,客户端断开期间的消息会被保留。
					客户端断开时不会丢弃自己发送出的消息，调用connect或reconnect将导致消息重新发送。
	userdata=None	
	protocol=MQTTv311 or MQTTv31
	transport="tcp" or "websockets"
	'''

	if len(sys.argv) < 1:
		print("run like this:")
		print("python3 script.py [device sn]")
		exit(1)

	devid = sys.argv[1]

	host = config.MQTT_SERVER_URL
	port = config.MQTT_SERVER_PORT
	user = config.MQTT_USER
	passwd = config.MQTT_PASSWD
	cafile = config.MQTT_CAFILE_PATH
	if not os.path.exists(cafile):
		with open(cafile, "w") as w:
			w.write(crtfile)

	print("host={}, port={}, username={}, password={}, cafile={}".format(host, port, user, passwd, cafile))
	mc = mqtt_client(	
						clean_session = True,
						userdata = None,
						protocol = mqtt.MQTTv311,
						transport = 'tcp')
	mc.setsubscribe(topic="/acs/response", qos=0)
	mc.set_user_and_password(user, passwd)
	mc.set_cafile(cafile)
	mc.set_deviceid(devid)
	mc.start_publish_thread()
	mc.run(host=host, port=port, keepalive=60)

